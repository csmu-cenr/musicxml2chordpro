

import sys
import xml.etree.ElementTree as ET

fout = sys.stdout
filename = 'test/An Affair to Remember-jazz.xml'
tree = ET.parse(filename)

root = tree.getroot()
#print(root)

title_element = root.find('work/work-title')
title = title_element.text
fout.write('{{title:{title}}}\n'.format(title=title))

partlists = root.findall('part-list/score-part')
for part in partlists:
    part_id = part.attrib['id']
    part_name = part.find('part-name')
#    print(part_id, part_name.text)


qualities = {
   'augmented': '+',
   'diminished': 'dim',
   'dominant': '7',
   'dominant-ninth': '9',
   'major': '' ,
   'minor': 'm',
   'minor-seventh': 'm7',
   'minor-sixth': 'm6',
}

keys = {
   -7: ('Cb', 'Abmin'),
   -6: ('Gb', 'Ebmin'),
   -5: ('Db', 'Bbmin'),
   -4: ('Ab', 'Fmin'),
   -3: ('Eb', 'Cmin'),
   -2: ('Bb', 'Gmin'),
   -1: ('F', 'Dmin'),
    0: ('C', 'Amin'),
    1: ('G', 'Emin'),
    2: ('D', 'Bmin'),
    3: ('A', 'Fmin'),
    4: ('E', 'C#min'),
    5: ('B', 'G#min'),
    6: ('F#', 'D#min'),
    7: ('C#', 'A#min'),
}


parts = root.findall('part')
part = parts[0] # This score has a single part. We should be doing this for each part
measures = part.findall('measure')  # Assume measures are sorted. We should really sort them by attribute 'number'
key_index = int(part.find('measure/attributes/key/fifths').text)
key = keys[key_index]
fout.write('{{key:{kmaj} {kmin}}}\n'.format(kmaj=key[0], kmin=key[1]))

fout.write('\n')
stype = ''
for m in measures:
    number = int(m.get('number'))
    for child in m:
        if child.tag == 'harmony':
            chord_root = child.find('root/root-step').text
            quality = child.find('kind').text
            q_code = qualities[quality]
            chord = chord_root + q_code
            #print(stype)
            if stype in ['begin', 'middle']:
                fout.write('-')
            fout.write('[{chord}]'.format(chord=chord))
        elif child.tag == 'note':
            lyrics = child.findall('lyric[@number="1"]')
            for l in lyrics:
                stype = l.find('syllabic').text
                syllable = l.find('text').text
                fout.write(syllable)
                if stype in ['single', 'end']:
                   fout.write(' ')

    if number % 4 == 0:
       fout.write('\n')
